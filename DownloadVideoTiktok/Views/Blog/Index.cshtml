@model DownloadVideoTiktok.Models.PageListModel<DownloadVideoTiktok.Models.Article>

@{
    ViewData["Title"] = "Blogs";
}

<header class="masthead">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="site-heading">
                    <h1>Blogs</h1>
                    <span class="subheading">A Blog by Videodownhd</span>
                </div>
            </div>
        </div>
    </div>
</header>


@*FAKE*@
<div class="container">
    <div class="row box-blog">
        @foreach (var item in Model.List)
        {
            <div class="col-md-4 col-sm-6">
                <div class="post-preview">
                    @await Html.PartialAsync("~/Views/Shared/_EditContentPartial.cshtml", item)
                    <a href="/blogs/how-to-download-tiktok-videos-without-watermark">
                        <h4 class="post-title">
                            @item.Name
                        </h4>
                        <p class="post-subtitle">
                            <img src="https://yoodownload.com/img/youtube-video-downloader.png" alt="Alternate Text" class="float-left m-2" style="max-width: 48px" />
                            @Html.Raw(item.Summary)
                        </p>
                    </a>
                    <p class="post-meta">
                        Posted by
                        <a href="/">videodownhd.com</a>
                        on @item.DateCreated.Value.ToLongDateString()
                    </p>
                </div>
            </div>
        }
    </div>
    <div class="clearfix">
        @if (Model.CurrentPage < Model.TotalPage)
        {
            <a class="btn button--sub float-right" href="/blogs?page=@(Model.CurrentPage + 1)">Older Posts →</a>
        }

        @if (Model.CurrentPage > 1)
        {
            <a class="btn button--sub float-left" href="/blogs?page=@(Model.CurrentPage - 1)">← Newer Posts</a>
        }
    </div>
</div>

